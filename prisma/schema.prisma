generator client {
    provider = "prisma-client-js"
}

datasource db {
    provider     = "mysql"
    url          = env("DATABASE_URL")
    relationMode = "prisma"
}

model Post {
    id        Int      @id @default(autoincrement())
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt
    title     String   @db.VarChar(255)
    content   String?  @db.VarChar(2555)
    published Boolean  @default(false)
    authorId  Int
}

model Player {
    id          String        @id @unique @default(uuid())
    user        String
    score       Int           @default(0)
    roundScore  Int           @default(0)
    isHand      Boolean       @default(false)
    lastBet     Boolean       @default(false)
    envidoScore Int           @default(0)
    lastEnvido  Boolean       @default(false)
    PlayerCards PlayerCards[]
    CardsPlayed CardsPlayed[]
}

model PlayerCards {
    id        String @id @unique @default(uuid())
    player_id String
    card_id   String
    player    Player @relation(fields: [player_id], references: [id])
    cards     Cards  @relation(fields: [card_id], references: [id])

    @@map("player_cards")
}

model CardsPlayed {
    id        String    @id @unique @default(uuid())
    round     Int
    envido    Boolean   @default(false)
    game_id   String
    card_id   String
    player_id String
    cards     Cards     @relation(fields: [card_id], references: [id])
    game      GameState @relation(fields: [game_id], references: [id])
    player    Player    @relation(fields: [player_id], references: [id])

    @@map("cards_played")
}

model GameState {
    id          String        @id @default(uuid())
    bet         Int
    round       Int
    CardsPlayed CardsPlayed[]
}

model Cards {
    id          String        @id @unique @default(uuid())
    suit        String
    number      Int
    value       Int
    available   Boolean       @default(true)
    PlayerCards PlayerCards[]
    CardsPlayed CardsPlayed[]
}

model MindMaps {
    id     String @id @unique @default(uuid())
    name   String
    nodes  Json
    edges  Json
    userId String
}

model Transaction {
    id       Int    @id @default(autoincrement())
    amount   Float
    type     String
    text     String
    date     Int
    category String @default("")
}

model User {
    id    String @id @unique
    name  String
    email String
}

model Student {
    id     Int    @id @unique @default(autoincrement())
    name   String
    email  String
    social String
    cel    Int
}

model UserTransaction {
    id    Int    @id @default(autoincrement())
    theme String
}
